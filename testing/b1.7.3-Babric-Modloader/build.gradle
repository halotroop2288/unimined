plugins {
    id 'java'
    id 'xyz.wagyourtail.unimined' // version '1.0.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

base {
    archivesName = 'UniminedExampleMod'
}

// this is just here so we can test the outputs easier and clean between tests
unimined.useGlobalCache = false

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(7)
    }
}

sourceSets {
    babric {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
    modloader {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://maven.wagyourtail.xyz/releases"
    }
    mavenCentral()
}

unimined.minecraft() {
    version "b1.7.3"
    side "client"

    mappings {
        babricIntermediary()
        biny("a00e3b0")
    }

    minecraftRemapper.config {
        ignoreConflicts(true)
    }

    defaultRemapJar = false
}

unimined.minecraft(sourceSets.babric) {
    version "b1.7.3"

    mappings {
        biny("a00e3b0")
    }

    babric {
        loader "0.16.13"
    }

    minecraftRemapper.config {
        ignoreConflicts(true)
    }
}

unimined.minecraft(sourceSets.modloader) {
    version "b1.7.3"
    side "client"

    mappings {
        babricIntermediary()
        biny("a00e3b0")
        stubs(["official", "babricIntermediary"]) {
            c("ModLoader", "net/minecraft/src/ModLoader")
            c("BaseMod", "net/minecraft/src/BaseMod")
        }
    }

    jarMod {

    }
}

repositories {
}

dependencies {
    modloaderJarMod "risugami:modloader:b1.7.3"
}

jar {
    enabled = false
}

babricJar {
    manifest {
        attributes([
                "Specification-Title": "UniminedExampleMod",
                "Specification-Vendor": "WagyourTail",
                "Specification-Version": "1",
                "Implementation-Title": "UniminedExampleMod",
                "Implementation-Version": "${version}",
                "Implementation-Vendor": "WagyourTail",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processBabricResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}